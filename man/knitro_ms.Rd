% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/knitro.R
\name{knitro_ms}
\alias{knitro_ms}
\title{Call the knitro C++ interface using multiple start values}
\usage{
knitro_ms(objFun = NULL, objGrad = NULL, c_equality = NULL,
  c_inequality = NULL, jac = NULL, jacIndexCons = NULL,
  jacIndexVars = NULL, x0 = NA, lb = NULL, ub = NULL,
  optionsFile = "options.opt")
}
\arguments{
\item{objFun}{is a scalar valued R function that returns the objective function}

\item{objGrad}{is a vector-valued R function with the gradient}

\item{c_equality}{is a vector-valued R function with equality constraints}

\item{c_inequality}{is a vector-valued R function with inequality constraints}

\item{jac}{is a vector with the content of the Jacobian (sparse)}

\item{jacIndexCons}{refers to each element of jac and contains the number
of the constraint it refers to. Indexing is C++ compatible, i.e. the first
constraint has index 0}

\item{x0}{is a matrix with starting values}

\item{optionsFile}{is the path and filename of the options file.
If it does not exist, the function will create it}

\item{jacIndexCons}{refers to each element of jac and contains the number
of the variable it refers to. Indexing is C++ compatible, i.e. the first
variable has index 0}
}
\value{
a list with the final estimates, the function value, and Knitro's exit status
}
\description{
This function passes user defined R functions on to the C++ interface. In contrast
to knitro() knitro uses a matrix of startvalues as input, where each row corresponds
to one vector of start values that knitro will attempt to optimize the objective function.
The function returns the solution for the set of start values that resulted in the lowest
objective function.
}

